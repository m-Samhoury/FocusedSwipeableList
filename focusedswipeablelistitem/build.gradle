apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.m-Samhoury'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 2
        versionName "0.2"
        android.buildToolsVersion "28.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
ext {
    versions = [
            support: "1.0.0"
    ]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.legacy:legacy-support-v4:$versions.support"
//    implementation "androidx.appcompat:appcompat-v4:$versions.support"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//mavenPublish {
//    releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//    snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//    repositoryUsername = repositoryUsernameSona // This defaults to either the SONATYPE_NEXUS_USERNAME Gradle property or the system environment variable.
//    repositoryPassword = repositoryPasswordSona // This defaults to either the SONATYPE_NEXUS_PASSWORD Gradle property or the system environment variable.
//}